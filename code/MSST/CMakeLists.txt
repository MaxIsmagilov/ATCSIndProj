
SET(MSST_HEADERS
    coordinates.hpp
    bar.hpp
    )

SET(MSST_IMPL
    coordinates.cpp
    bar.cpp
    )

ADD_LIBRARY(MSST_OBJECTS OBJECT 
    ${MSST_HEADERS}  
    ${MSST_IMPL}
    )


TARGET_COMPILE_OPTIONS(
    MSST_OBJECTS PUBLIC "-std=c++20"
    )


target_include_directories(MSST_OBJECTS
    PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>
    $<INSTALL_INTERFACE:include>
)

ADD_LIBRARY(MSST $<TARGET_OBJECTS:MSST_OBJECTS>)

ADD_LIBRARY(MSST::MSST ALIAS MSST)

SET_TARGET_PROPERTIES( MSST
    PROPERTIES
    CXX_STANDARD 20
    CXX_STANDARD_REQUIRED YES
    COMPILE_OPTIONS "-Wall -Wextra -Wpedantic -Werror -std=c++20"
    PUBLIC_HEADER "${MSST_HEADERS}")

INCLUDE(GNUInstallDirs)

INSTALL(TARGETS MSST MSST_OBJECTS
    EXPORT MSST_TARGETS
    RUNTIME DESTINATION ${CMAKE_INSTAL_BINDIR}
    LIBRARY DESTINATION ${CMAKE_INSTAL_LIBDIR}
    ARCHIVE DESTINATION ${CMAKE_INSTAL_LIBDIR}
    INCLUDES DESTINATION ${CMAKE_INSTAL_INCLUDEDIR}/ThirdParty
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTAL_INCLUDEDIR}/MSST
    )

INSTALL( EXPORT MSST_TARGETS
    FILE MSST_TARGETS.cmake
    NAMESPACE MSST::
    DESTINATION ${CMAKE_INSTAL_LIBDIR}/cmake/MSST)
  
# Add all tests
enable_testing()
include(GoogleTest)
include(CTest)
